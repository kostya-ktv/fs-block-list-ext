/**
 * Generated by orval v6.23.0 🍺
 * Do not edit manually.
 * Block list
 * OpenAPI spec version: 1.0.0
 */
import { createInstance } from "./api-instance";
import type { BodyType } from "./api-instance";
export type BlockListControllerRemoveBlockListItemParams = {
  id: number;
};
export enum BlockItemType {
  Website = "Website",
  KeyWord = "KeyWord",
}

export type BlockListControllerGetBlockListParams = {
  q?: string;
};

export interface BlockListItemCreateDTO {
  data: string;
  type: BlockItemType[];
}

export interface BlockListItemDTO {
  blockListId: number;
  createdAt: string;
  data: string;
  id: number;
  type: BlockItemType;
}

export interface BlockListDTO {
  id: number;
  items: BlockListItemDTO[];
  ownerId: number;
}

export interface AccountPatchDTO {
  isBlockingEnabled?: boolean;
}

export interface AccountDTO {
  id: number;
  isBlockingEnabled: boolean;
  ownerId: number;
}

export interface SessionDTO {
  email: string;
  exp: number;
  iat: number;
  id: number;
}

export interface SignInPayloadDTO {
  email: string;
  password: string;
}

export interface SignUpPayloadDTO {
  email: string;
  password: string;
}

export const appControllerGetHello = () => {
  return createInstance<void>({ url: `/`, method: "GET" });
};

export const authControllerSignUp = (
  signUpPayloadDTO: BodyType<SignUpPayloadDTO>,
) => {
  return createInstance<void>({
    url: `/auth/sign-up`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: signUpPayloadDTO,
  });
};

export const authControllerSignIn = (
  signInPayloadDTO: BodyType<SignInPayloadDTO>,
) => {
  return createInstance<void>({
    url: `/auth/sign-in`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: signInPayloadDTO,
  });
};

export const authControllerSignOut = () => {
  return createInstance<void>({ url: `/auth/sign-out`, method: "POST" });
};

export const authControllerGetSession = () => {
  return createInstance<SessionDTO>({ url: `/auth/session`, method: "GET" });
};

export const accountControllerGetAccount = () => {
  return createInstance<AccountDTO>({ url: `/account`, method: "GET" });
};

export const accountControllerPatchAccount = (
  accountPatchDTO: BodyType<AccountPatchDTO>,
) => {
  return createInstance<AccountDTO>({
    url: `/account`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: accountPatchDTO,
  });
};

export const blockListControllerGetBlockList = (
  params?: BlockListControllerGetBlockListParams,
) => {
  return createInstance<BlockListDTO>({
    url: `/block-list`,
    method: "GET",
    params,
  });
};

export const blockListControllerCreateBlockListItem = (
  blockListItemCreateDTO: BodyType<BlockListItemCreateDTO>,
) => {
  return createInstance<BlockListDTO>({
    url: `/block-list`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: blockListItemCreateDTO,
  });
};

export const blockListControllerRemoveBlockListItem = (
  params: BlockListControllerRemoveBlockListItemParams,
) => {
  return createInstance<void>({ url: `/block-list`, method: "DELETE", params });
};

export type AppControllerGetHelloResult = NonNullable<
  Awaited<ReturnType<typeof appControllerGetHello>>
>;
export type AuthControllerSignUpResult = NonNullable<
  Awaited<ReturnType<typeof authControllerSignUp>>
>;
export type AuthControllerSignInResult = NonNullable<
  Awaited<ReturnType<typeof authControllerSignIn>>
>;
export type AuthControllerSignOutResult = NonNullable<
  Awaited<ReturnType<typeof authControllerSignOut>>
>;
export type AuthControllerGetSessionResult = NonNullable<
  Awaited<ReturnType<typeof authControllerGetSession>>
>;
export type AccountControllerGetAccountResult = NonNullable<
  Awaited<ReturnType<typeof accountControllerGetAccount>>
>;
export type AccountControllerPatchAccountResult = NonNullable<
  Awaited<ReturnType<typeof accountControllerPatchAccount>>
>;
export type BlockListControllerGetBlockListResult = NonNullable<
  Awaited<ReturnType<typeof blockListControllerGetBlockList>>
>;
export type BlockListControllerCreateBlockListItemResult = NonNullable<
  Awaited<ReturnType<typeof blockListControllerCreateBlockListItem>>
>;
export type BlockListControllerRemoveBlockListItemResult = NonNullable<
  Awaited<ReturnType<typeof blockListControllerRemoveBlockListItem>>
>;
